[
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 1 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 1 | Improved readability with proper indentation"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 2 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 2 | Corrected conditional operator mistake"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 3 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 3 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 4 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 4 | Added missing parentheses for print function"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 5 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 5 | Fixed bug in recursive function call"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 6 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 6 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 7 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 7 | Improved readability with proper indentation"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 8 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 8 | Improved readability with proper indentation"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 9 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 9 | Refactored variable naming for clarity"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 10 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 10 | Indentation fixed for proper code block"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 11 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 11 | Updated function definition to include colon"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 12 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 12 | Updated function definition to include colon"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 13 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 13 | Fixed bug in recursive function call"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 14 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 14 | Refactored variable naming for clarity"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 15 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 15 | Added missing parentheses for print function"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 16 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 16 | Minor syntax corrections"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 17 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 17 | Fixed bug in recursive function call"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 18 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 18 | Refactored variable naming for clarity"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 19 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 19 | Refactored variable naming for clarity"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 20 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 20 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 21 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 21 | Refactored variable naming for clarity"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 22 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 22 | Refactored variable naming for clarity"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 23 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 23 | Fixed bug in recursive function call"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 24 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 24 | Refactored variable naming for clarity"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 25 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 25 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 26 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 26 | Corrected conditional operator mistake"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 27 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 27 | Minor syntax corrections"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 28 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 28 | Corrected conditional operator mistake"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 29 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 29 | Indentation fixed for proper code block"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 30 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 30 | Fixed bug in recursive function call"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 31 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 31 | Indentation fixed for proper code block"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 32 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 32 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 33 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 33 | Indentation fixed for proper code block"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 34 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 34 | Corrected conditional operator mistake"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 35 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 35 | Fixed bug in recursive function call"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 36 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 36 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 37 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 37 | Corrected conditional operator mistake"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 38 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 38 | Improved readability with proper indentation"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 39 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 39 | Minor syntax corrections"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 40 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 40 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 41 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 41 | Fixed bug in recursive function call"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 42 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 42 | Added missing parentheses for print function"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 43 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 43 | Minor syntax corrections"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 44 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 44 | Added missing parentheses for print function"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 45 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 45 | Added missing parentheses for print function"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 46 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 46 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 47 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 47 | Corrected conditional operator mistake"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 48 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 48 | Updated function definition to include colon"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 49 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 49 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 50 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 50 | Updated function definition to include colon"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 51 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 51 | Updated function definition to include colon"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 52 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 52 | Updated function definition to include colon"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 53 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 53 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 54 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 54 | Refactored variable naming for clarity"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 55 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 55 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 56 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 56 | Fixed bug in recursive function call"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 57 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 57 | Fixed bug in recursive function call"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 58 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 58 | Indentation fixed for proper code block"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 59 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 59 | Added missing parentheses for print function"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 60 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 60 | Fixed bug in recursive function call"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 61 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 61 | Corrected conditional operator mistake"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 62 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 62 | Minor syntax corrections"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 63 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 63 | Minor syntax corrections"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 64 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 64 | Indentation fixed for proper code block"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 65 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 65 | Minor syntax corrections"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 66 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 66 | Fixed bug in recursive function call"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 67 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 67 | Refactored variable naming for clarity"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 68 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 68 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 69 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 69 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 70 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 70 | Added missing parentheses for print function"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 71 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 71 | Indentation fixed for proper code block"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 72 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 72 | Improved readability with proper indentation"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 73 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 73 | Indentation fixed for proper code block"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 74 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 74 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 75 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 75 | Fixed bug in recursive function call"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 76 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 76 | Minor syntax corrections"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 77 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 77 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 78 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 78 | Fixed bug in recursive function call"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 79 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 79 | Improved readability with proper indentation"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 80 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 80 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 81 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 81 | Updated function definition to include colon"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 82 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 82 | Indentation fixed for proper code block"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 83 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 83 | Indentation fixed for proper code block"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 84 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 84 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 85 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 85 | Updated function definition to include colon"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 86 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 86 | Improved readability with proper indentation"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 87 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 87 | Fixed bug in recursive function call"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 88 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 88 | Fixed bug in recursive function call"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 89 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 89 | Corrected conditional operator mistake"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 90 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 90 | Added missing parentheses for print function"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 91 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 91 | Improved readability with proper indentation"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 92 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 92 | Corrected conditional operator mistake"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 93 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 93 | Refactored variable naming for clarity"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 94 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 94 | Fixed bug in recursive function call"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 95 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 95 | Added missing parentheses for print function"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 96 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 96 | Indentation fixed for proper code block"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 97 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 97 | Corrected conditional operator mistake"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 98 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 98 | Added missing parentheses for print function"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 99 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 99 | Indentation fixed for proper code block"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 100 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 100 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 101 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 101 | Indentation fixed for proper code block"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 102 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 102 | Improved readability with proper indentation"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 103 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 103 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 104 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 104 | Fixed bug in recursive function call"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 105 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 105 | Improved readability with proper indentation"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 106 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 106 | Minor syntax corrections"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 107 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 107 | Fixed bug in recursive function call"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 108 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 108 | Added missing parentheses for print function"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 109 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 109 | Updated function definition to include colon"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 110 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 110 | Minor syntax corrections"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 111 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 111 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 112 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 112 | Updated function definition to include colon"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 113 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 113 | Corrected conditional operator mistake"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 114 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 114 | Fixed bug in recursive function call"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 115 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 115 | Improved readability with proper indentation"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 116 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 116 | Updated function definition to include colon"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 117 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 117 | Indentation fixed for proper code block"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 118 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 118 | Minor syntax corrections"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 119 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 119 | Added missing parentheses for print function"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 120 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 120 | Minor syntax corrections"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 121 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 121 | Corrected conditional operator mistake"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 122 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 122 | Improved readability with proper indentation"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 123 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 123 | Added missing parentheses for print function"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 124 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 124 | Refactored variable naming for clarity"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 125 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 125 | Indentation fixed for proper code block"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 126 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 126 | Updated function definition to include colon"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 127 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 127 | Improved readability with proper indentation"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 128 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 128 | Updated function definition to include colon"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 129 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 129 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 130 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 130 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 131 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 131 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 132 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 132 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 133 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 133 | Fixed bug in recursive function call"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 134 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 134 | Corrected conditional operator mistake"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 135 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 135 | Fixed bug in recursive function call"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 136 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 136 | Refactored variable naming for clarity"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 137 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 137 | Fixed bug in recursive function call"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 138 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 138 | Minor syntax corrections"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 139 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 139 | Fixed bug in recursive function call"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 140 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 140 | Updated function definition to include colon"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 141 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 141 | Fixed bug in recursive function call"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 142 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 142 | Updated function definition to include colon"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 143 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 143 | Indentation fixed for proper code block"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 144 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 144 | Refactored variable naming for clarity"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 145 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 145 | Refactored variable naming for clarity"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 146 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 146 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 147 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 147 | Indentation fixed for proper code block"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 148 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 148 | Improved readability with proper indentation"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 149 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 149 | Updated function definition to include colon"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 150 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 150 | Minor syntax corrections"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 151 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 151 | Fixed bug in recursive function call"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 152 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 152 | Corrected conditional operator mistake"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 153 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 153 | Updated function definition to include colon"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 154 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 154 | Indentation fixed for proper code block"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 155 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 155 | Refactored variable naming for clarity"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 156 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 156 | Improved readability with proper indentation"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 157 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 157 | Improved readability with proper indentation"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 158 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 158 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 159 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 159 | Corrected conditional operator mistake"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 160 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 160 | Indentation fixed for proper code block"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 161 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 161 | Refactored variable naming for clarity"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 162 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 162 | Indentation fixed for proper code block"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 163 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 163 | Added missing parentheses for print function"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 164 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 164 | Refactored variable naming for clarity"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 165 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 165 | Indentation fixed for proper code block"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 166 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 166 | Updated function definition to include colon"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 167 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 167 | Improved readability with proper indentation"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 168 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 168 | Improved readability with proper indentation"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 169 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 169 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 170 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 170 | Refactored variable naming for clarity"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 171 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 171 | Fixed bug in recursive function call"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 172 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 172 | Minor syntax corrections"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 173 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 173 | Fixed bug in recursive function call"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 174 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 174 | Added missing parentheses for print function"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 175 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 175 | Added missing parentheses for print function"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 176 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 176 | Indentation fixed for proper code block"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 177 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 177 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 178 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 178 | Fixed bug in recursive function call"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 179 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 179 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 180 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 180 | Minor syntax corrections"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 181 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 181 | Refactored variable naming for clarity"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 182 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 182 | Updated function definition to include colon"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 183 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 183 | Updated function definition to include colon"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 184 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 184 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 185 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 185 | Updated function definition to include colon"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 186 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 186 | Refactored variable naming for clarity"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 187 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 187 | Minor syntax corrections"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 188 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 188 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 189 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 189 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 190 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 190 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 191 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 191 | Indentation fixed for proper code block"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 192 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 192 | Updated function definition to include colon"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 193 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 193 | Fixed bug in recursive function call"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 194 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 194 | Refactored variable naming for clarity"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 195 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 195 | Corrected conditional operator mistake"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 196 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 196 | Indentation fixed for proper code block"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 197 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 197 | Refactored variable naming for clarity"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 198 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 198 | Indentation fixed for proper code block"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 199 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 199 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 200 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 200 | Improved readability with proper indentation"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 201 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 201 | Minor syntax corrections"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 202 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 202 | Added missing parentheses for print function"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 203 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 203 | Refactored variable naming for clarity"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 204 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 204 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 205 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 205 | Corrected conditional operator mistake"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 206 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 206 | Fixed bug in recursive function call"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 207 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 207 | Indentation fixed for proper code block"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 208 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 208 | Corrected conditional operator mistake"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 209 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 209 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 210 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 210 | Added missing parentheses for print function"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 211 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 211 | Fixed bug in recursive function call"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 212 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 212 | Updated function definition to include colon"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 213 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 213 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 214 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 214 | Fixed bug in recursive function call"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 215 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 215 | Corrected conditional operator mistake"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 216 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 216 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 217 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 217 | Minor syntax corrections"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 218 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 218 | Fixed bug in recursive function call"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 219 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 219 | Indentation fixed for proper code block"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 220 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 220 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 221 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 221 | Minor syntax corrections"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 222 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 222 | Added missing parentheses for print function"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 223 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 223 | Improved readability with proper indentation"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 224 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 224 | Fixed bug in recursive function call"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 225 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 225 | Indentation fixed for proper code block"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 226 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 226 | Indentation fixed for proper code block"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 227 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 227 | Refactored variable naming for clarity"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 228 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 228 | Minor syntax corrections"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 229 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 229 | Refactored variable naming for clarity"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 230 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 230 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 231 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 231 | Improved readability with proper indentation"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 232 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 232 | Indentation fixed for proper code block"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 233 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 233 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 234 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 234 | Added missing parentheses for print function"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 235 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 235 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 236 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 236 | Indentation fixed for proper code block"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 237 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 237 | Minor syntax corrections"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 238 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 238 | Fixed bug in recursive function call"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 239 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 239 | Indentation fixed for proper code block"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 240 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 240 | Added missing parentheses for print function"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 241 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 241 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 242 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 242 | Added missing parentheses for print function"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 243 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 243 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 244 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 244 | Refactored variable naming for clarity"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 245 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 245 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 246 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 246 | Minor syntax corrections"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 247 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 247 | Improved readability with proper indentation"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 248 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 248 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 249 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 249 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 250 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 250 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 251 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 251 | Refactored variable naming for clarity"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 252 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 252 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 253 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 253 | Fixed bug in recursive function call"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 254 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 254 | Updated function definition to include colon"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 255 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 255 | Fixed bug in recursive function call"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 256 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 256 | Minor syntax corrections"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 257 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 257 | Fixed bug in recursive function call"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 258 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 258 | Minor syntax corrections"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 259 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 259 | Minor syntax corrections"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 260 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 260 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 261 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 261 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 262 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 262 | Improved readability with proper indentation"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 263 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 263 | Corrected conditional operator mistake"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 264 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 264 | Minor syntax corrections"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 265 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 265 | Updated function definition to include colon"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 266 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 266 | Refactored variable naming for clarity"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 267 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 267 | Improved readability with proper indentation"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 268 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 268 | Updated function definition to include colon"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 269 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 269 | Corrected conditional operator mistake"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 270 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 270 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 271 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 271 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 272 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 272 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 273 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 273 | Improved readability with proper indentation"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 274 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 274 | Indentation fixed for proper code block"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 275 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 275 | Refactored variable naming for clarity"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 276 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 276 | Corrected conditional operator mistake"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 277 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 277 | Minor syntax corrections"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 278 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 278 | Fixed bug in recursive function call"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 279 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 279 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 280 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 280 | Updated function definition to include colon"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 281 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 281 | Improved readability with proper indentation"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 282 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 282 | Corrected conditional operator mistake"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 283 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 283 | Improved readability with proper indentation"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 284 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 284 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 285 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 285 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 286 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 286 | Minor syntax corrections"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 287 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 287 | Refactored variable naming for clarity"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 288 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 288 | Added missing parentheses for print function"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 289 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 289 | Indentation fixed for proper code block"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 290 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 290 | Added missing parentheses for print function"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 291 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 291 | Fixed bug in recursive function call"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 292 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 292 | Updated function definition to include colon"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 293 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 293 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 294 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 294 | Corrected conditional operator mistake"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 295 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 295 | Minor syntax corrections"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 296 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 296 | Indentation fixed for proper code block"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 297 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 297 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 298 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 298 | Improved readability with proper indentation"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 299 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 299 | Added missing parentheses for print function"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 300 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 300 | Fixed bug in recursive function call"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 301 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 301 | Minor syntax corrections"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 302 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 302 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 303 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 303 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 304 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 304 | Indentation fixed for proper code block"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 305 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 305 | Improved readability with proper indentation"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 306 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 306 | Fixed bug in recursive function call"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 307 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 307 | Updated function definition to include colon"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 308 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 308 | Corrected conditional operator mistake"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 309 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 309 | Indentation fixed for proper code block"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 310 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 310 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 311 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 311 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 312 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 312 | Refactored variable naming for clarity"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 313 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 313 | Minor syntax corrections"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 314 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 314 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 315 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 315 | Corrected conditional operator mistake"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 316 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 316 | Improved readability with proper indentation"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 317 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 317 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 318 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 318 | Refactored variable naming for clarity"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 319 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 319 | Corrected conditional operator mistake"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 320 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 320 | Fixed bug in recursive function call"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 321 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 321 | Fixed bug in recursive function call"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 322 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 322 | Fixed bug in recursive function call"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 323 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 323 | Indentation fixed for proper code block"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 324 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 324 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 325 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 325 | Added missing parentheses for print function"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 326 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 326 | Indentation fixed for proper code block"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 327 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 327 | Indentation fixed for proper code block"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 328 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 328 | Improved readability with proper indentation"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 329 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 329 | Updated function definition to include colon"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 330 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 330 | Added missing parentheses for print function"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 331 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 331 | Indentation fixed for proper code block"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 332 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 332 | Fixed bug in recursive function call"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 333 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 333 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 334 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 334 | Added missing parentheses for print function"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 335 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 335 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 336 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 336 | Fixed bug in recursive function call"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 337 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 337 | Minor syntax corrections"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 338 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 338 | Added missing parentheses for print function"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 339 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 339 | Corrected conditional operator mistake"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 340 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 340 | Improved readability with proper indentation"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 341 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 341 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 342 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 342 | Improved readability with proper indentation"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 343 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 343 | Refactored variable naming for clarity"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 344 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 344 | Fixed bug in recursive function call"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 345 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 345 | Improved readability with proper indentation"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 346 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 346 | Updated function definition to include colon"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 347 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 347 | Improved readability with proper indentation"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 348 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 348 | Minor syntax corrections"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 349 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 349 | Minor syntax corrections"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 350 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 350 | Minor syntax corrections"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 351 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 351 | Indentation fixed for proper code block"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 352 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 352 | Added missing parentheses for print function"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 353 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 353 | Corrected conditional operator mistake"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 354 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 354 | Improved readability with proper indentation"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 355 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 355 | Improved readability with proper indentation"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 356 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 356 | Updated function definition to include colon"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 357 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 357 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 358 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 358 | Refactored variable naming for clarity"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 359 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 359 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 360 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 360 | Refactored variable naming for clarity"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 361 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 361 | Minor syntax corrections"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 362 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 362 | Indentation fixed for proper code block"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 363 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 363 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 364 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 364 | Corrected conditional operator mistake"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 365 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 365 | Minor syntax corrections"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 366 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 366 | Added missing parentheses for print function"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 367 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 367 | Minor syntax corrections"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 368 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 368 | Corrected conditional operator mistake"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 369 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 369 | Improved readability with proper indentation"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 370 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 370 | Refactored variable naming for clarity"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 371 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 371 | Indentation fixed for proper code block"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 372 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 372 | Refactored variable naming for clarity"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 373 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 373 | Minor syntax corrections"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 374 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 374 | Minor syntax corrections"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 375 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 375 | Refactored variable naming for clarity"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 376 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 376 | Added missing parentheses for print function"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 377 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 377 | Indentation fixed for proper code block"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 378 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 378 | Indentation fixed for proper code block"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 379 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 379 | Indentation fixed for proper code block"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 380 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 380 | Minor syntax corrections"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 381 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 381 | Refactored variable naming for clarity"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 382 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 382 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 383 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 383 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 384 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 384 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 385 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 385 | Indentation fixed for proper code block"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 386 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 386 | Fixed bug in recursive function call"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 387 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 387 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 388 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 388 | Updated function definition to include colon"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 389 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 389 | Updated function definition to include colon"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 390 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 390 | Improved readability with proper indentation"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 391 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 391 | Refactored variable naming for clarity"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 392 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 392 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 393 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 393 | Minor syntax corrections"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 394 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 394 | Improved readability with proper indentation"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 395 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 395 | Indentation fixed for proper code block"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 396 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 396 | Refactored variable naming for clarity"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 397 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 397 | Indentation fixed for proper code block"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 398 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 398 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 399 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 399 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 400 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 400 | Indentation fixed for proper code block"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 401 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 401 | Fixed bug in recursive function call"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 402 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 402 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 403 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 403 | Indentation fixed for proper code block"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 404 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 404 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 405 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 405 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 406 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 406 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 407 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 407 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 408 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 408 | Refactored variable naming for clarity"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 409 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 409 | Corrected conditional operator mistake"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 410 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 410 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 411 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 411 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 412 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 412 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 413 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 413 | Added missing parentheses for print function"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 414 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 414 | Added missing parentheses for print function"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 415 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 415 | Improved readability with proper indentation"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 416 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 416 | Improved readability with proper indentation"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 417 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 417 | Refactored variable naming for clarity"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 418 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 418 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 419 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 419 | Indentation fixed for proper code block"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 420 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 420 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 421 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 421 | Refactored variable naming for clarity"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 422 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 422 | Minor syntax corrections"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 423 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 423 | Improved readability with proper indentation"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 424 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 424 | Minor syntax corrections"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 425 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 425 | Added missing parentheses for print function"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 426 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 426 | Updated function definition to include colon"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 427 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 427 | Fixed bug in recursive function call"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 428 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 428 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 429 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 429 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 430 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 430 | Refactored variable naming for clarity"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 431 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 431 | Minor syntax corrections"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 432 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 432 | Fixed bug in recursive function call"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 433 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 433 | Minor syntax corrections"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 434 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 434 | Minor syntax corrections"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 435 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 435 | Refactored variable naming for clarity"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 436 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 436 | Corrected conditional operator mistake"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 437 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 437 | Updated function definition to include colon"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 438 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 438 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 439 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 439 | Corrected conditional operator mistake"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 440 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 440 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 441 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 441 | Minor syntax corrections"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 442 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 442 | Minor syntax corrections"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 443 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 443 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 444 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 444 | Fixed bug in recursive function call"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 445 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 445 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 446 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 446 | Fixed bug in recursive function call"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 447 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 447 | Added missing parentheses for print function"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 448 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 448 | Added missing parentheses for print function"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 449 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 449 | Minor syntax corrections"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 450 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 450 | Improved readability with proper indentation"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 451 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 451 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 452 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 452 | Fixed bug in recursive function call"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 453 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 453 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 454 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 454 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 455 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 455 | Minor syntax corrections"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 456 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 456 | Improved readability with proper indentation"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 457 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 457 | Minor syntax corrections"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 458 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 458 | Refactored variable naming for clarity"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 459 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 459 | Minor syntax corrections"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 460 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 460 | Fixed bug in recursive function call"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 461 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 461 | Refactored variable naming for clarity"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 462 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 462 | Improved readability with proper indentation"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 463 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 463 | Minor syntax corrections"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 464 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 464 | Indentation fixed for proper code block"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 465 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 465 | Added missing parentheses for print function"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 466 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 466 | Corrected conditional operator mistake"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 467 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 467 | Fixed bug in recursive function call"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 468 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 468 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 469 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 469 | Refactored variable naming for clarity"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 470 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 470 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 471 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 471 | Refactored variable naming for clarity"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 472 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 472 | Improved readability with proper indentation"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 473 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 473 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 474 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 474 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 475 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 475 | Updated function definition to include colon"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 476 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 476 | Indentation fixed for proper code block"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 477 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 477 | Updated function definition to include colon"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 478 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 478 | Updated function definition to include colon"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 479 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 479 | Corrected conditional operator mistake"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 480 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 480 | Refactored variable naming for clarity"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 481 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 481 | Refactored variable naming for clarity"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 482 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 482 | Minor syntax corrections"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 483 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 483 | Indentation fixed for proper code block"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 484 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 484 | Refactored variable naming for clarity"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 485 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 485 | Added missing parentheses for print function"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 486 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 486 | Indentation fixed for proper code block"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 487 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 487 | Updated function definition to include colon"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 488 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 488 | Refactored variable naming for clarity"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 489 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 489 | Indentation fixed for proper code block"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 490 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 490 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 491 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 491 | Improved readability with proper indentation"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 492 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 492 | Refactored variable naming for clarity"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 493 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 493 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 494 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 494 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 495 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 495 | Improved readability with proper indentation"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 496 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 496 | Added missing parentheses for print function"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 497 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 497 | Updated function definition to include colon"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 498 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 498 | Minor syntax corrections"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 499 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 499 | Indentation fixed for proper code block"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 500 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 500 | Indentation fixed for proper code block"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 501 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 501 | Fixed bug in recursive function call"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 502 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 502 | Indentation fixed for proper code block"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 503 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 503 | Fixed bug in recursive function call"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 504 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 504 | Fixed bug in recursive function call"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 505 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 505 | Indentation fixed for proper code block"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 506 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 506 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 507 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 507 | Refactored variable naming for clarity"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 508 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 508 | Corrected conditional operator mistake"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 509 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 509 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 510 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 510 | Updated function definition to include colon"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 511 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 511 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 512 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 512 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 513 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 513 | Indentation fixed for proper code block"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 514 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 514 | Minor syntax corrections"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 515 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 515 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 516 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 516 | Updated function definition to include colon"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 517 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 517 | Corrected conditional operator mistake"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 518 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 518 | Refactored variable naming for clarity"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 519 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 519 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 520 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 520 | Added missing parentheses for print function"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 521 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 521 | Indentation fixed for proper code block"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 522 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 522 | Fixed bug in recursive function call"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 523 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 523 | Fixed bug in recursive function call"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 524 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 524 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 525 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 525 | Corrected conditional operator mistake"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 526 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 526 | Refactored variable naming for clarity"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 527 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 527 | Added missing parentheses for print function"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 528 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 528 | Indentation fixed for proper code block"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 529 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 529 | Minor syntax corrections"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 530 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 530 | Minor syntax corrections"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 531 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 531 | Improved readability with proper indentation"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 532 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 532 | Updated function definition to include colon"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 533 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 533 | Refactored variable naming for clarity"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 534 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 534 | Refactored variable naming for clarity"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 535 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 535 | Corrected conditional operator mistake"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 536 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 536 | Improved readability with proper indentation"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 537 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 537 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 538 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 538 | Fixed bug in recursive function call"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 539 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 539 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 540 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 540 | Added missing parentheses for print function"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 541 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 541 | Refactored variable naming for clarity"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 542 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 542 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 543 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 543 | Minor syntax corrections"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 544 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 544 | Improved readability with proper indentation"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 545 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 545 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 546 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 546 | Indentation fixed for proper code block"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 547 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 547 | Improved readability with proper indentation"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 548 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 548 | Minor syntax corrections"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 549 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 549 | Minor syntax corrections"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 550 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 550 | Improved readability with proper indentation"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 551 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 551 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 552 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 552 | Refactored variable naming for clarity"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 553 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 553 | Refactored variable naming for clarity"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 554 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 554 | Corrected conditional operator mistake"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 555 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 555 | Added missing parentheses for print function"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 556 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 556 | Minor syntax corrections"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 557 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 557 | Corrected conditional operator mistake"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 558 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 558 | Refactored variable naming for clarity"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 559 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 559 | Minor syntax corrections"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 560 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 560 | Minor syntax corrections"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 561 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 561 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 562 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 562 | Updated function definition to include colon"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 563 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 563 | Minor syntax corrections"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 564 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 564 | Added missing parentheses for print function"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 565 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 565 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 566 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 566 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 567 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 567 | Minor syntax corrections"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 568 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 568 | Corrected conditional operator mistake"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 569 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 569 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 570 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 570 | Minor syntax corrections"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 571 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 571 | Fixed bug in recursive function call"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 572 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 572 | Fixed bug in recursive function call"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 573 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 573 | Added missing parentheses for print function"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 574 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 574 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 575 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 575 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 576 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 576 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 577 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 577 | Corrected conditional operator mistake"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 578 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 578 | Added missing parentheses for print function"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 579 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 579 | Improved readability with proper indentation"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 580 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 580 | Fixed bug in recursive function call"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 581 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 581 | Updated function definition to include colon"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 582 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 582 | Corrected conditional operator mistake"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 583 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 583 | Improved readability with proper indentation"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 584 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 584 | Minor syntax corrections"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 585 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 585 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 586 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 586 | Improved readability with proper indentation"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 587 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 587 | Minor syntax corrections"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 588 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 588 | Fixed bug in recursive function call"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 589 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 589 | Indentation fixed for proper code block"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 590 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 590 | Fixed bug in recursive function call"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 591 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 591 | Fixed bug in recursive function call"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 592 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 592 | Added missing parentheses for print function"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 593 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 593 | Added missing parentheses for print function"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 594 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 594 | Fixed bug in recursive function call"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 595 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 595 | Updated function definition to include colon"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 596 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 596 | Minor syntax corrections"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 597 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 597 | Refactored variable naming for clarity"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 598 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 598 | Indentation fixed for proper code block"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 599 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 599 | Minor syntax corrections"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 600 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 600 | Refactored variable naming for clarity"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 601 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 601 | Improved readability with proper indentation"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 602 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 602 | Indentation fixed for proper code block"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 603 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 603 | Added missing parentheses for print function"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 604 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 604 | Refactored variable naming for clarity"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 605 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 605 | Refactored variable naming for clarity"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 606 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 606 | Refactored variable naming for clarity"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 607 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 607 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 608 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 608 | Minor syntax corrections"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 609 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 609 | Indentation fixed for proper code block"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 610 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 610 | Added missing parentheses for print function"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 611 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 611 | Indentation fixed for proper code block"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 612 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 612 | Added missing parentheses for print function"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 613 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 613 | Improved readability with proper indentation"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 614 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 614 | Updated function definition to include colon"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 615 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 615 | Minor syntax corrections"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 616 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 616 | Indentation fixed for proper code block"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 617 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 617 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 618 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 618 | Updated function definition to include colon"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 619 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 619 | Indentation fixed for proper code block"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 620 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 620 | Refactored variable naming for clarity"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 621 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 621 | Improved readability with proper indentation"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 622 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 622 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 623 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 623 | Refactored variable naming for clarity"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 624 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 624 | Added missing parentheses for print function"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 625 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 625 | Minor syntax corrections"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 626 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 626 | Fixed bug in recursive function call"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 627 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 627 | Fixed bug in recursive function call"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 628 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 628 | Indentation fixed for proper code block"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 629 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 629 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 630 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 630 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 631 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 631 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 632 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 632 | Refactored variable naming for clarity"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 633 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 633 | Refactored variable naming for clarity"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 634 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 634 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 635 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 635 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 636 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 636 | Added missing parentheses for print function"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 637 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 637 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 638 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 638 | Corrected conditional operator mistake"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 639 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 639 | Fixed bug in recursive function call"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 640 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 640 | Added missing parentheses for print function"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 641 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 641 | Minor syntax corrections"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 642 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 642 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 643 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 643 | Updated function definition to include colon"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 644 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 644 | Minor syntax corrections"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 645 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 645 | Corrected conditional operator mistake"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 646 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 646 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 647 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 647 | Updated function definition to include colon"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 648 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 648 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 649 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 649 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 650 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 650 | Minor syntax corrections"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 651 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 651 | Updated function definition to include colon"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 652 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 652 | Added missing parentheses for print function"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 653 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 653 | Indentation fixed for proper code block"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 654 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 654 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 655 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 655 | Fixed bug in recursive function call"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 656 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 656 | Corrected conditional operator mistake"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 657 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 657 | Improved readability with proper indentation"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 658 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 658 | Fixed bug in recursive function call"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 659 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 659 | Minor syntax corrections"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 660 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 660 | Updated function definition to include colon"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 661 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 661 | Refactored variable naming for clarity"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 662 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 662 | Refactored variable naming for clarity"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 663 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 663 | Fixed bug in recursive function call"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 664 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 664 | Updated function definition to include colon"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 665 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 665 | Added missing parentheses for print function"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 666 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 666 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 667 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 667 | Indentation fixed for proper code block"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 668 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 668 | Refactored variable naming for clarity"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 669 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 669 | Fixed bug in recursive function call"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 670 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 670 | Updated function definition to include colon"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 671 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 671 | Indentation fixed for proper code block"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 672 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 672 | Fixed bug in recursive function call"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 673 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 673 | Improved readability with proper indentation"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 674 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 674 | Corrected conditional operator mistake"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 675 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 675 | Minor syntax corrections"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 676 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 676 | Minor syntax corrections"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 677 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 677 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 678 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 678 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 679 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 679 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 680 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 680 | Added missing parentheses for print function"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 681 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 681 | Improved readability with proper indentation"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 682 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 682 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 683 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 683 | Improved readability with proper indentation"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 684 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 684 | Improved readability with proper indentation"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 685 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 685 | Updated function definition to include colon"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 686 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 686 | Improved readability with proper indentation"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 687 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 687 | Fixed bug in recursive function call"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 688 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 688 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 689 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 689 | Fixed bug in recursive function call"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 690 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 690 | Updated function definition to include colon"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 691 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 691 | Improved readability with proper indentation"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 692 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 692 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 693 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 693 | Improved readability with proper indentation"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 694 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 694 | Added missing parentheses for print function"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 695 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 695 | Fixed bug in recursive function call"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 696 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 696 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 697 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 697 | Corrected conditional operator mistake"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 698 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 698 | Indentation fixed for proper code block"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 699 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 699 | Fixed bug in recursive function call"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 700 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 700 | Indentation fixed for proper code block"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 701 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 701 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 702 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 702 | Refactored variable naming for clarity"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 703 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 703 | Fixed bug in recursive function call"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 704 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 704 | Added missing parentheses for print function"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 705 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 705 | Added missing parentheses for print function"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 706 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 706 | Indentation fixed for proper code block"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 707 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 707 | Minor syntax corrections"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 708 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 708 | Improved readability with proper indentation"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 709 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 709 | Minor syntax corrections"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 710 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 710 | Added missing parentheses for print function"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 711 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 711 | Fixed bug in recursive function call"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 712 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 712 | Updated function definition to include colon"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 713 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 713 | Updated function definition to include colon"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 714 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 714 | Indentation fixed for proper code block"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 715 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 715 | Refactored variable naming for clarity"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 716 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 716 | Refactored variable naming for clarity"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 717 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 717 | Improved readability with proper indentation"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 718 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 718 | Minor syntax corrections"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 719 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 719 | Added missing parentheses for print function"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 720 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 720 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 721 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 721 | Fixed bug in recursive function call"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 722 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 722 | Updated function definition to include colon"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 723 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 723 | Fixed bug in recursive function call"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 724 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 724 | Improved readability with proper indentation"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 725 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 725 | Minor syntax corrections"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 726 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 726 | Improved readability with proper indentation"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 727 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 727 | Refactored variable naming for clarity"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 728 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 728 | Added missing parentheses for print function"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 729 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 729 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 730 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 730 | Updated function definition to include colon"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 731 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 731 | Indentation fixed for proper code block"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 732 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 732 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 733 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 733 | Indentation fixed for proper code block"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 734 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 734 | Minor syntax corrections"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 735 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 735 | Corrected conditional operator mistake"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 736 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 736 | Fixed bug in recursive function call"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 737 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 737 | Corrected conditional operator mistake"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 738 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 738 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 739 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 739 | Corrected conditional operator mistake"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 740 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 740 | Corrected conditional operator mistake"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 741 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 741 | Corrected conditional operator mistake"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 742 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 742 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 743 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 743 | Indentation fixed for proper code block"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 744 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 744 | Indentation fixed for proper code block"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 745 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 745 | Fixed bug in recursive function call"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 746 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 746 | Updated function definition to include colon"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 747 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 747 | Minor syntax corrections"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 748 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 748 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 749 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 749 | Refactored variable naming for clarity"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 750 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 750 | Added missing parentheses for print function"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 751 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 751 | Minor syntax corrections"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 752 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 752 | Added missing parentheses for print function"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 753 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 753 | Indentation fixed for proper code block"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 754 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 754 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 755 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 755 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 756 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 756 | Improved readability with proper indentation"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 757 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 757 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 758 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 758 | Corrected conditional operator mistake"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 759 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 759 | Fixed bug in recursive function call"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 760 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 760 | Fixed bug in recursive function call"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 761 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 761 | Added missing parentheses for print function"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 762 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 762 | Updated function definition to include colon"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 763 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 763 | Indentation fixed for proper code block"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 764 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 764 | Updated function definition to include colon"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 765 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 765 | Refactored variable naming for clarity"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 766 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 766 | Corrected conditional operator mistake"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 767 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 767 | Improved readability with proper indentation"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 768 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 768 | Fixed bug in recursive function call"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 769 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 769 | Improved readability with proper indentation"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 770 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 770 | Fixed bug in recursive function call"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 771 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 771 | Added missing parentheses for print function"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 772 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 772 | Improved readability with proper indentation"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 773 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 773 | Minor syntax corrections"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 774 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 774 | Corrected conditional operator mistake"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 775 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 775 | Minor syntax corrections"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 776 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 776 | Indentation fixed for proper code block"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 777 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 777 | Fixed bug in recursive function call"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 778 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 778 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 779 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 779 | Indentation fixed for proper code block"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 780 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 780 | Refactored variable naming for clarity"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 781 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 781 | Corrected conditional operator mistake"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 782 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 782 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 783 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 783 | Indentation fixed for proper code block"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 784 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 784 | Improved readability with proper indentation"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 785 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 785 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 786 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 786 | Improved readability with proper indentation"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 787 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 787 | Indentation fixed for proper code block"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 788 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 788 | Fixed bug in recursive function call"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 789 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 789 | Added missing parentheses for print function"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 790 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 790 | Indentation fixed for proper code block"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 791 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 791 | Improved readability with proper indentation"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 792 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 792 | Improved readability with proper indentation"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 793 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 793 | Added missing parentheses for print function"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 794 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 794 | Indentation fixed for proper code block"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 795 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 795 | Improved readability with proper indentation"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 796 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 796 | Added missing parentheses for print function"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 797 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 797 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 798 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 798 | Refactored variable naming for clarity"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 799 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 799 | Minor syntax corrections"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 800 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 800 | Fixed bug in recursive function call"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 801 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 801 | Indentation fixed for proper code block"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 802 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 802 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 803 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 803 | Fixed bug in recursive function call"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 804 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 804 | Added missing parentheses for print function"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 805 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 805 | Corrected conditional operator mistake"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 806 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 806 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 807 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 807 | Minor syntax corrections"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 808 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 808 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 809 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 809 | Minor syntax corrections"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 810 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 810 | Fixed bug in recursive function call"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 811 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 811 | Added missing parentheses for print function"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 812 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 812 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 813 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 813 | Improved readability with proper indentation"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 814 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 814 | Minor syntax corrections"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 815 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 815 | Updated function definition to include colon"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 816 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 816 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 817 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 817 | Refactored variable naming for clarity"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 818 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 818 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 819 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 819 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 820 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 820 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 821 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 821 | Updated function definition to include colon"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 822 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 822 | Updated function definition to include colon"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 823 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 823 | Improved readability with proper indentation"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 824 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 824 | Fixed bug in recursive function call"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 825 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 825 | Refactored variable naming for clarity"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 826 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 826 | Improved readability with proper indentation"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 827 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 827 | Minor syntax corrections"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 828 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 828 | Minor syntax corrections"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 829 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 829 | Refactored variable naming for clarity"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 830 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 830 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 831 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 831 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 832 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 832 | Refactored variable naming for clarity"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 833 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 833 | Indentation fixed for proper code block"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 834 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 834 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 835 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 835 | Refactored variable naming for clarity"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 836 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 836 | Improved readability with proper indentation"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 837 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 837 | Improved readability with proper indentation"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 838 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 838 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 839 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 839 | Corrected conditional operator mistake"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 840 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 840 | Fixed bug in recursive function call"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 841 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 841 | Corrected conditional operator mistake"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 842 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 842 | Improved readability with proper indentation"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 843 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 843 | Corrected conditional operator mistake"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 844 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 844 | Fixed bug in recursive function call"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 845 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 845 | Fixed bug in recursive function call"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 846 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 846 | Minor syntax corrections"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 847 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 847 | Improved readability with proper indentation"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 848 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 848 | Corrected conditional operator mistake"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 849 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 849 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 850 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 850 | Indentation fixed for proper code block"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 851 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 851 | Minor syntax corrections"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 852 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 852 | Fixed bug in recursive function call"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 853 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 853 | Corrected conditional operator mistake"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 854 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 854 | Minor syntax corrections"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 855 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 855 | Fixed bug in recursive function call"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 856 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 856 | Added missing parentheses for print function"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 857 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 857 | Updated function definition to include colon"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 858 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 858 | Fixed bug in recursive function call"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 859 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 859 | Improved readability with proper indentation"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 860 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 860 | Added missing parentheses for print function"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 861 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 861 | Improved readability with proper indentation"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 862 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 862 | Indentation fixed for proper code block"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 863 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 863 | Improved readability with proper indentation"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 864 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 864 | Minor syntax corrections"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 865 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 865 | Indentation fixed for proper code block"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 866 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 866 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 867 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 867 | Improved readability with proper indentation"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 868 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 868 | Fixed bug in recursive function call"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 869 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 869 | Updated function definition to include colon"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 870 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 870 | Refactored variable naming for clarity"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 871 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 871 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 872 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 872 | Minor syntax corrections"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 873 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 873 | Improved readability with proper indentation"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 874 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 874 | Corrected conditional operator mistake"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 875 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 875 | Improved readability with proper indentation"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 876 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 876 | Improved readability with proper indentation"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 877 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 877 | Fixed bug in recursive function call"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 878 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 878 | Fixed bug in recursive function call"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 879 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 879 | Corrected conditional operator mistake"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 880 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 880 | Fixed bug in recursive function call"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 881 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 881 | Improved readability with proper indentation"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 882 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 882 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 883 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 883 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 884 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 884 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 885 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 885 | Indentation fixed for proper code block"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 886 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 886 | Refactored variable naming for clarity"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 887 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 887 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 888 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 888 | Corrected conditional operator mistake"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 889 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 889 | Refactored variable naming for clarity"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 890 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 890 | Refactored variable naming for clarity"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 891 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 891 | Improved readability with proper indentation"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 892 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 892 | Added missing parentheses for print function"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 893 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 893 | Added missing parentheses for print function"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 894 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 894 | Corrected conditional operator mistake"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 895 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 895 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 896 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 896 | Indentation fixed for proper code block"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 897 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 897 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 898 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 898 | Indentation fixed for proper code block"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 899 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 899 | Fixed bug in recursive function call"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 900 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 900 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 901 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 901 | Refactored variable naming for clarity"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 902 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 902 | Refactored variable naming for clarity"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 903 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 903 | Corrected conditional operator mistake"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 904 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 904 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 905 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 905 | Indentation fixed for proper code block"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 906 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 906 | Corrected conditional operator mistake"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 907 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 907 | Updated function definition to include colon"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 908 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 908 | Refactored variable naming for clarity"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 909 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 909 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 910 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 910 | Improved readability with proper indentation"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 911 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 911 | Updated function definition to include colon"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 912 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 912 | Refactored variable naming for clarity"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 913 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 913 | Refactored variable naming for clarity"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 914 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 914 | Added missing parentheses for print function"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 915 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 915 | Refactored variable naming for clarity"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 916 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 916 | Updated function definition to include colon"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 917 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 917 | Improved readability with proper indentation"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 918 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 918 | Improved readability with proper indentation"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 919 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 919 | Refactored variable naming for clarity"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 920 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 920 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 921 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 921 | Minor syntax corrections"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 922 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 922 | Refactored variable naming for clarity"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 923 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 923 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 924 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 924 | Indentation fixed for proper code block"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 925 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 925 | Added missing parentheses for print function"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 926 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 926 | Minor syntax corrections"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 927 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 927 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 928 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 928 | Refactored variable naming for clarity"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 929 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 929 | Improved readability with proper indentation"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 930 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 930 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 931 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 931 | Fixed bug in recursive function call"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 932 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 932 | Refactored variable naming for clarity"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 933 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 933 | Minor syntax corrections"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 934 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 934 | Updated function definition to include colon"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 935 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 935 | Improved readability with proper indentation"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 936 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 936 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 937 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 937 | Updated function definition to include colon"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 938 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 938 | Added missing parentheses for print function"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 939 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 939 | Improved readability with proper indentation"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 940 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 940 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 941 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 941 | Minor syntax corrections"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 942 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 942 | Updated function definition to include colon"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 943 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 943 | Updated function definition to include colon"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 944 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 944 | Indentation fixed for proper code block"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 945 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 945 | Indentation fixed for proper code block"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 946 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 946 | Minor syntax corrections"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 947 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 947 | Added missing parentheses for print function"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 948 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 948 | Improved readability with proper indentation"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 949 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 949 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 950 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 950 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 951 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 951 | Fixed bug in recursive function call"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 952 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 952 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 953 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 953 | Corrected conditional operator mistake"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 954 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 954 | Added missing parentheses for print function"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 955 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 955 | Added missing parentheses for print function"
    },
    {
        "instruction":"if x = 5:\n    print('x is 5')\n# Sample ID: 956 - SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<string>, line 1)",
        "output":"if x == 5:\n    print('x is 5')\n# Sample ID: 956 | Fixed bug in recursive function call"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 957 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 957 | Minor syntax corrections"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 958 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 958 | Corrected conditional operator mistake"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 959 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 959 | Corrected conditional operator mistake"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 960 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 960 | Minor syntax corrections"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 961 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 961 | Updated function definition to include colon"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 962 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 962 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 963 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 963 | Indentation fixed for proper code block"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 964 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 964 | Improved readability with proper indentation"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 965 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 965 | Improved readability with proper indentation"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 966 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 966 | Corrected conditional operator mistake"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 967 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 967 | Indentation fixed for proper code block"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 968 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 968 | Fixed bug in recursive function call"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 969 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 969 | Improved readability with proper indentation"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 970 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 970 | Added missing parentheses for print function"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 971 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 971 | Minor syntax corrections"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 972 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 972 | Added missing parentheses for print function"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 973 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 973 | Indentation fixed for proper code block"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 974 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 974 | Indentation fixed for proper code block"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 975 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 975 | Minor syntax corrections"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 976 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 976 | Corrected conditional operator mistake"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 977 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 977 | Minor syntax corrections"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 978 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 978 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 979 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 979 | Updated function definition to include colon"
    },
    {
        "instruction":"def add(a, b)\n    return a + b\n# Sample ID: 980 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def add(a, b):\n    return a + b\n# Sample ID: 980 | Refactored variable naming for clarity"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 981 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 981 | Improved readability with proper indentation"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 982 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 982 | Corrected conditional operator mistake"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 983 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 983 | Improved readability with proper indentation"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 984 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 984 | Fixed bug in recursive function call"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 985 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 985 | Fixed bug in recursive function call"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 986 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 986 | Updated function definition to include colon"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 987 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 987 | Added missing parentheses for print function"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 988 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 988 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"list = [1, 2, 3, 4]\nfor i in list\n    print(i)\n# Sample ID: 989 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"lst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Sample ID: 989 | Added missing parentheses for print function"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 990 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 990 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 991 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 991 | Added missing parentheses for print function"
    },
    {
        "instruction":"for i in range(10):\nprint(i)\n# Sample ID: 992 - IndentationError: expected an indented block after 'for' statement on line 1 (<string>, line 2)",
        "output":"for i in range(10):\n    print(i)\n# Sample ID: 992 | Improved readability with proper indentation"
    },
    {
        "instruction":"def foo()\n    print('Missing colon in function definition')\n# Sample ID: 993 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"def foo():\n    print('Fixed missing colon in function definition')\n# Sample ID: 993 | Fixed syntax error due to missing colon"
    },
    {
        "instruction":"x = [1, 2, 3]\nprint x\n# Sample ID: 994 - SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)? (<string>, line 2)",
        "output":"x = [1, 2, 3]\nprint(x)\n# Sample ID: 994 | Fixed bug in recursive function call"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 995 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 995 | Fixed bug in recursive function call"
    },
    {
        "instruction":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 996 - No Error",
        "output":"def greet(name):\n    print('Hello, ' + name)\n# Sample ID: 996 | Resolved off-by-one error in loop"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 997 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 997 | Fixed bug in recursive function call"
    },
    {
        "instruction":"if (a > b):\n    print('a is greater')\nelse\n    print('b is greater')\n# Sample ID: 998 - SyntaxError: expected ':' (<string>, line 3)",
        "output":"if (a > b):\n    print('a is greater')\nelse:\n    print('b is greater')\n# Sample ID: 998 | Improved readability with proper indentation"
    },
    {
        "instruction":"while True\n    do_something()\n# Sample ID: 999 - SyntaxError: expected ':' (<string>, line 1)",
        "output":"while True:\n    do_something()\n# Sample ID: 999 | Corrected conditional operator mistake"
    },
    {
        "instruction":"def factorial(n):\n    if n == 1\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 1000 - SyntaxError: expected ':' (<string>, line 2)",
        "output":"def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n# Sample ID: 1000 | Resolved off-by-one error in loop"
    }
]